---
apiVersion: automation.cloudbees.io/v1alpha1
kind: action
name: argocd-service-action
description: An example argocd service action
inputs:
  serverurl:
    description: argocd server url
    required: true
    default: 'https://kubernetes.default.svc'
  username:
    description: username to authenticate
    required: true
  password:
    description: password to use
    required: true 
  projectname:
    description: project job id
    required: true
    default: 'platform-test'
  applicationname:
    description: application name
    required: true
  repourl:
    description: repo url
    required: true
  targetrevision:
    description: repo version
    required: true
    default: 'HEAD'
  repopath:
    description: path within the Git repository git only
    required: false
    default: '.'
  destnamespace:
    description: destination namespace
    required: true
    default: 'platform-test'
  
runs:
  using: composite
  steps:
    - id: login
      name: login to argocd
      uses: docker://poseidon1979/curl-jq:1.0
      run: | 
        SESSION_TOKEN=$(curl -d "{\"username\": \"${{ inputs.username }}\", \"password\": \"${{ inputs.password }}\"}" -H "Content-Type: application/json" "http://34.110.153.253/api/v1/session" | jq -r .token)           
        echo $SESSION_TOKEN >> ./token
        cat ./token
      
    - id: create-app
      name: create application
      uses: docker://curlimages/curl:latest
      run: |  
        APPLICATION="${{ inputs.applicationname }}"
        REPOURL="${{ inputs.repourl }}"
        REPO_PATH="${{ inputs.repopath }}"
        REVISION="${{ inputs.targetrevision }}"
        SERVER="${{ inputs.serverurl }}"
        NAMESPACE="${{ inputs.destnamespace }}"
        PROJECT="${{ inputs.projectname }}"

        #json payload for argocd rest api
        
        
        PAYLOAD=$(cat << 'EOF'
        {
          "metadata": {
            "name": "$APPLICATION",
            "namespace": "argocd"
          },
          "spec": {
            "source": {
              "repoURL": "$REPOURL",
              "path": "$REPO_PATH",
              "targetRevision": "$REVISION"
            },
            "destination": {
              "server": "$SERVER",
              "namespace": "$NAMESPACE"
            },
            "project": "$PROJECT"
          }
        }
        EOF
        ) 
          
          curl -s -o response.txt -w "%{response_code}" -k -L -X POST -H "Content-Type: application/json" --data "$PAYLOAD" "${{ inputs.serverurl }}/api/v1/applications" --cookie "argocd.token=$SESSION_TOKEN"
          cat response.txt
          
